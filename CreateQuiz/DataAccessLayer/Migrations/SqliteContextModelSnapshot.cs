// <auto-generated />
using System;
using DataAccessLayer.Concreate.MyContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(SqliteContext))]
    partial class SqliteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Answer", b =>
                {
                    b.Property<int?>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnswerA")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerB")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerC")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerD")
                        .HasColumnType("TEXT");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionText")
                        .HasColumnType("TEXT");

                    b.Property<string>("RightAnswer")
                        .HasColumnType("TEXT");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Exam", b =>
                {
                    b.Property<int>("ExamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExamID");

                    b.HasIndex("QuestionId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuizQuestion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Answer", b =>
                {
                    b.HasOne("EntityLayer.Concreate.EntityFrameworkSqlite.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Exam", b =>
                {
                    b.HasOne("EntityLayer.Concreate.EntityFrameworkSqlite.Question", "Question")
                        .WithMany("Exams")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EntityFrameworkSqlite.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
